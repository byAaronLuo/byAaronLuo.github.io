<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2018%2F06%2F23%2FHello-World%2F</url>
    <content type="text"><![CDATA[前言经过一天的努力终于在github创建了自己的博客，那我就来一篇Hello World吧，分享分享小编的踩过的坑。(此博客是基于安装了node.js以及git哦) 过程小编今天写了一天的js代码，晚上开始配置，看了许多教程，都没能搞明白，所以请教了隔壁大佬，帮小编解决了这些问题。 注册GitHub账号官网创建仓库1.登陆GitHub2.点击创建仓库 3.填写仓库信息仓库名称必须是 用户名+github.io，比如我的username是byAaronLuo，name我的仓库名称就是byAaronLuo.github.io(小编这里偷懒，copy大佬的图片，因为现在真的很晚了。。。) 配置SSH1.设置username 和email : 注意：这里一定要安装git 12git config --global user.name &quot;your GitHub&apos;s username&quot;git config --global user.name &quot;your GitHub&apos;s E-mail&quot; 2生成SSH密钥1ssh-keygen -t rsa -C &quot;your GitHub&apos;s E-mail &quot; 一般这种情况下是不需要密码的，所以一直回车就好 成功后，在C盘用户-&gt;Administrator 文件夹下就会有一个新的文件夹 .ssh，里面就有刚刚创建的ssh密钥文件id_rsa和id_rsa_pub 注：id_rsa文件是私钥，要妥善保管，id_rsa.pub是公钥文件。 3.添加公钥到GitHub点击用户头像，然后再点击Settings选项 在用户设置栏，点击SSH and GPG keys选项，然后点击New SSH key 将 id_rsa.pub 的内容复制到Key 文本框中，再点击Add SSH key 4.测试SSH1ssh -T git@github.com 接下来会显示出下面的确认信息 12345The authenticity of host &apos;github.com (192.30.255.112)&apos; can&apos;t be established. RSA key fingerprint is SHA256:nThbg6kXUpJWGl7E1IGOCspRomTxdCARLviKw6E5SY8.Are you sure you want to continue connecting (yes/no)? 输入yes然后回车，你会看见 1Hi byAaronLuo! You&apos;ve successfully authenticated, but GitHub does not provide shell access. Hexo安装hexo安装好Node.js环境后，就可以通过node的npm包管理工具安装Hexo，执行以下指令(当然cnpm可以换成npm，这里使用淘宝镜像会更快，因为小编学习vue.js时配置过node.js，无论实在Linux、Pc、Macos 都是很好配置的哦) 1cnpm install hexo-cli -g hexo全局安装一次就够了，后面可以直接使用hexo相关的操作。 创建博客文件夹在此目录下管理自己的博客代码 12mkdir blogcd blog 初始化Hexo1hexo init 安装依赖包1cnpm install 生成静态页面1hexo g 启动本地服务器（在本地的localhost:4000）查看代码1hexo s 上传GitHub 这里小编习惯用git命令上传至仓库 完成上述操作后，在根目录中会出现一个public文件，在终端进入public文件，然后执行以下操作1234git remote add origin &lt;url&gt;git add .git commit -m &quot;ss&quot;git push -u origin master 域名配置现在已经可以通过https://yourname.github.io 来访问自己的博客站点啦。这时可能有人会说了，大家都通过github.io来访问，好没个性，能不能配置用自己的域名来访问自己的站点。答案当然可以。 首先，你得有个自己的域名，如果还没，那就去买个。 1.进域名控制台在解析里面添加一条CNAME记录，指向yourname.github.io即可。 2.打开项目，选择 setting #####3.找到GitHub Pages （每次deploy过后都需要修改一次） 这样你就可以通过自己的域名访问了 其他基础命令123456789101112131415hexo new&quot;postName&quot; #新建文章hexo new page&quot;pageName&quot; #新建页面hexo generate #生成静态页面至public目录hexo clean #清除生成内容hexo server #开启预览访问端口（默认端口4000，&apos;ctrl + c&apos;关闭server）hexo deploy #将.deploy目录部署到指定空间hexo help # 查看帮助hexo version #查看Hexo的版本 hexo 命令缩写1234567hexo g：hexo generatehexo c：hexo cleanhexo s：hexo serverhexo d：hexo deploy hexo 命令组合123hexo clean &amp;&amp; hexo g -s #清除、生成、启动hexo clean &amp;&amp; hexo g -d #清除、生成、部署]]></content>
      <tags>
        <tag>基础</tag>
      </tags>
  </entry>
</search>
